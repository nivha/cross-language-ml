The Cathedral and the Bazaar is an essay in favor of open source software written by Eric S. Raymond hacker in 1997 has had two sequels entitled:. I Homesteading the noosphere and The Black Cauldron Theme == == analyzes two models of production software: the cathedral is the development model tighter and vertical characteristic of proprietary software and secondly the bazaar, with its horizontal dynamics and "noisy" that characterized the development of the Linux kernel and other free software projects that were enhanced with community work through open source Internet. == Review == Some criticize the confusions and biases of the text, as the change to free software (free translation software) open software (in English open software). Free English can mean both free and free and this is misleading. == Publication == The text are included in the book The Cathedral & the Bazaar published by O'Reilly in Editorial 2001.Dicha maintains exclusive rights commercial exploitation of the book in print. However, you can download free electronic version from the author's website (includes translations in several languages, including Spanish) == Lessons listed in The Cathedral and the Bazaar == The book is a collection of lessons learned from the experience that the author shares in the text, namely:. # Every good work of software starts from the personal needs of the programmer (all good work begins when you have to scratch your own itch) # good programmers know what to write. Best, what to rewrite (and reuse) # "Consider disposal; anyway have to.". (Fred Brooks, The Mythical Man-Month, Chapter 11) # If you have the right attitude, interesting problems will find. # When you lose interest in a program, your last duty is to give an inheritance to a competent successor. # Treat users as collaborators is the most appropriate way to improve the code, and the most effective debugging. # Free fast and often, and listen to your customers. # Given a sufficient basis for developers and beta-testers attendees, almost any problem can be characterized quickly and the solution be obvious at least to someone. Or, less formally, "with many eyes, all bugs will jump to the eye." This I have named Linus's Law. # Intelligent data structures and code crass work much better than in the reverse case. # If you treat your analysts (beta-testers) like your most valuable resource, they will respond by becoming your most valuable resource. # the next best thing to having good ideas is recognizing good ideas from your users. The latter is sometimes the best. # Often the most innovative and spectacular solutions come to understand that the conception of the problem was wrong. # "Perfection (in design) is achieved not when there is nothing left to add, but when there is nothing left to take away. "# Any tool is useful being used as intended, but * great * tool is provided to be used in the most unexpected way. # When software is written for a gateway any type, take care to disturb the data stream as little as possible, and * never * delete information unless the recipient oblige it! # When your language is far from a complete Turing, then the syntactic sugar can be your friend. # A security system is as safe as secret. Beware of secret half. # To solve an interesting problem, start by finding a problem that interests you. # If the development coordinator has a medium at least as good as the Internet, and knows how to lead without coercion, many heads will inevitably better than one. == See also == * Noosphere * in issue 190 of the magazine Novática (which is under free license) a study of Capiluppi and Andrea Martin Michlmayr (translated into Spanish) on the cycles is life projects based on community volunteers, in which a comparison of successful projects developed with the model "cathedral" and "bazaar" == References ==== external links == * Review * review translation is the cathedral and the bazaar Spanish * (English) video animation in which a robot historian ponders the cathedral logical and bazarCategoría: 2001Categoría Books: Books libresCategoría: Books informáticaCategoría: Software libreCategoría: Culture hackerCategoría: project Management software