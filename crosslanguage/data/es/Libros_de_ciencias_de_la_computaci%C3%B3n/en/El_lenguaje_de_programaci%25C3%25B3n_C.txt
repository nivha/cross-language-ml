The C programming language (English title: The C Programming Language) is a programming book written by Brian Kernighan and Dennis Ritchie, the latter designed and implemented the language (as well as co-designed the Unix operating system whose development was strongly linked with language development). The book was an important part of the development and popularization of the C language and is still widely read and used today. Because the original designer of the language was co-author of the book, and because the first edition served as the de facto standard language, the book is considered by many to be the authoritative reference of C, and is sometimes referred to as 'the Bible of C'. == History == the first edition, published in 1978, was the first widely available book on the C programming language C was created by Dennis Ritchie. Brian Kernighan wrote the first tutorial of C. The authors came together to write the book in conjunction with the early stages of development at Bell Laboratories. The C version written in this book is sometimes referred to as K & R C (the surnames of the authors), in order to distinguish this first version with the back describing a C standardized ANSI C. In 1988 the second edition of book was published, updated to cover the changes made to the language of the new product standard ANSI C, particularly with the inclusion of reference material in the standard libraries. The second edition of the book (the latest until 2010) has been translated into 20 idiomas.ANSI C, first standardized in 1988, has undergone several revisions, the most recent of these is the ISO / IEC 9899:1999 (also known as "C99"), adopted as an ANSI standard in March 2000. Yet not presented a new edition of the book to cover recent changes. == == Influence the C Programming Language has been cited as a model for technical writing, because of the clear presentation and concise treatment. In just 228 pages (272 pages in the second edition), the book thoroughly covers C. The examples in the book generally consist of complete programs of the type that one would find in everyday use of language, with an emphasis on systems programming. The technical details of C are balanced by the observations of the authors about good programming practices, which are immediately illustrated with real and concrete examples. As the authors note in the preface to the second edition: We have tried to maintain the brevity of the first edition. C is not a big language and is not suitable for a large book. We have improved the exposition of critical features, such as pointers, which are very important in programming with C. We have refined the original examples, and have added new examples in several chapters. For example, the management of complicated declarations is augmented by programs that convert declarations into words and vice versa. As before, all examples have been tested directly from the text, which are in a form in which the machine can leerlos.Quizás the most famous example of the book is the "Hello World", which only prints out text "hello, world" as an example of a small functional program made with C. Numerous texts have followed this convention to present a programming language from entonces.Antes arrival of ANSI C, the first edition served as the de facto standard for creators of compilers C. with the standardization of ANSI C, the authors guided the second edition programmers rather than explicitly dedicate creators compilers; in the words of the authors: Appendix A, the reference manual is standard, but we intend to convey the essentials of the standard in a small space. This is readily understandable for programmers, but not as a definition for compiler-creators whose role properly belongs to the standard itself. Appendix B is a summary of the facilities of the standard library. This reference is also for programmers, not implementers. Appendix C is a concise summary of the changes in version original.La influence of The C Programming Language programmers in a generation which first worked with C in academia and industry, has led many to accept the style programming of the authors and their conventions as best practices, even as the norm. For example, the coding style and format of the programs presented in both editions of the book is sometimes referred to as "K & R style" or "style indented" and, significantly, it has become the coding style used by convention in source of the Unix and Linux kernels == References == Category:. programming language CCategoría: Books 1978Categoría: Computer Books